// @generated by protoc-gen-es v2.3.0 with parameter "target=ts"
// @generated from file types.proto (package types, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message as Message$1 } from "@bufbuild/protobuf";

/**
 * Describes the file types.proto.
 */
export const file_types: GenFile = /*@__PURE__*/
  fileDesc("Cgt0eXBlcy5wcm90bxIFdHlwZXMikgUKCVdTTWVzc2FnZRIxChJ1c2VyX2NoYW5nZV9zdGF0dXMYASABKAsyEy50eXBlcy5DaGFuZ2VTdGF0dXNIABIxChBuZXdfY2hhdF9tZXNzYWdlGAIgASgLMhUudHlwZXMuTmV3Q2hhdE1lc3NhZ2VIABIzChFlZGl0X2NoYXRfbWVzc2FnZRgDIAEoCzIWLnR5cGVzLkVkaXRDaGF0TWVzc2FnZUgAEjcKE2RlbGV0ZV9jaGF0X21lc3NhZ2UYBCABKAsyGC50eXBlcy5EZWxldGVDaGF0TWVzc2FnZUgAEiwKDXN0YXJ0X2NoYW5uZWwYBSABKAsyEy50eXBlcy5TdGFydENoYW5uZWxIABIuCg5zdGFydF9jYXRlZ29yeRgGIAEoCzIULnR5cGVzLlN0YXJ0Q2F0ZWdvcnlIABIqCgxraWxsX2NoYW5uZWwYByABKAsyEi50eXBlcy5LaWxsQ2hhbm5lbEgAEiwKDWtpbGxfY2F0ZWdvcnkYCCABKAsyEy50eXBlcy5LaWxsQ2F0ZWdvcnlIABI2ChNjcmVhdGVfb3JfZWRpdF9yb2xlGAkgASgLMhcudHlwZXMuQ3JlYXRlT3JFZGl0Um9sZUgAEigKC3JlbW92ZV9yb2xlGAogASgLMhEudHlwZXMuUmVtb3ZlUm9sZUgAEiQKCW1vdmVfcm9sZRgLIAEoCzIPLnR5cGVzLk1vdmVSb2xlSAASLwoPYWRkX3JvbGVfbWVtYmVyGAwgASgLMhQudHlwZXMuQWRkUm9sZU1lbWJlckgAEjUKEnJlbW92ZV9yb2xlX21lbWJlchgNIAEoCzIXLnR5cGVzLlJlbW92ZVJvbGVNZW1iZXJIAEIJCgdjb250ZW50In0KDENoYW5nZVN0YXR1cxIMCgR0eXBlGAEgASgJEhkKBHVzZXIYAiABKAsyCy50eXBlcy5Vc2VyEhIKCmNoYW5uZWxfaWQYAyABKAkSEQoJc2VydmVyX2lkGAQgASgJEg4KBnN0YXR1cxgFIAEoCRINCgVyb2xlcxgGIAMoCSIxCg5OZXdDaGF0TWVzc2FnZRIfCgdtZXNzYWdlGAEgASgLMg4udHlwZXMuTWVzc2FnZSIyCg9FZGl0Q2hhdE1lc3NhZ2USHwoHbWVzc2FnZRgBIAEoCzIOLnR5cGVzLk1lc3NhZ2UiNAoRRGVsZXRlQ2hhdE1lc3NhZ2USHwoHbWVzc2FnZRgBIAEoCzIOLnR5cGVzLk1lc3NhZ2UiLwoMU3RhcnRDaGFubmVsEh8KB2NoYW5uZWwYASABKAsyDi50eXBlcy5DaGFubmVsIi4KC0tpbGxDaGFubmVsEh8KB2NoYW5uZWwYASABKAsyDi50eXBlcy5DaGFubmVsIjIKDVN0YXJ0Q2F0ZWdvcnkSIQoIY2F0ZWdvcnkYASABKAsyDy50eXBlcy5DYXRlZ29yeSJMCgxLaWxsQ2F0ZWdvcnkSEQoJc2VydmVyX2lkGAEgASgJEhMKC2NhdGVnb3J5X2lkGAIgASgJEhQKDGNoYW5uZWxzX2lkcxgDIAMoCSItChBDcmVhdGVPckVkaXRSb2xlEhkKBHJvbGUYASABKAsyCy50eXBlcy5Sb2xlIicKClJlbW92ZVJvbGUSGQoEcm9sZRgBIAEoCzILLnR5cGVzLlJvbGUiZwoITW92ZVJvbGUSHwoKbW92ZWRfcm9sZRgBIAEoCzILLnR5cGVzLlJvbGUSIAoLdGFyZ2V0X3JvbGUYAiABKAsyCy50eXBlcy5Sb2xlEgwKBGZyb20YAyABKAUSCgoCdG8YBCABKAUiOwoNQWRkUm9sZU1lbWJlchIPCgd1c2VyX2lkGAEgASgJEhkKBHJvbGUYAiABKAsyCy50eXBlcy5Sb2xlIj4KEFJlbW92ZVJvbGVNZW1iZXISDwoHdXNlcl9pZBgBIAEoCRIZCgRyb2xlGAIgASgLMgsudHlwZXMuUm9sZSKkAgoHTWVzc2FnZRIKCgJpZBgBIAEoCRIbCgZhdXRob3IYAiABKAsyCy50eXBlcy5Vc2VyEhEKCXNlcnZlcl9pZBgDIAEoCRISCgpjaGFubmVsX2lkGAQgASgJEg8KB2NvbnRlbnQYBSABKAwSEAoIZXZlcnlvbmUYBiABKAgSFgoObWVudGlvbnNfdXNlcnMYByADKAkSGQoRbWVudGlvbnNfY2hhbm5lbHMYCCADKAkSEwoLYXR0YWNobWVudHMYCSABKAwSLgoKY3JlYXRlZF9hdBgKIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASLgoKdXBkYXRlZF9hdBgLIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAivAIKBFVzZXISCgoCaWQYASABKAkSEAoIdXNlcm5hbWUYAiABKAkSFAoMZGlzcGxheV9uYW1lGAMgASgJEg4KBmF2YXRhchgEIAEoCRIOCgZiYW5uZXIYBSABKAkSEAoIYWJvdXRfbWUYBiABKAwSEgoKZXhwZXJpZW5jZRgHIAEoBRISCgptYWluX2NvbG9yGAggASgJEiIKBWxpbmtzGAkgAygLMhMudHlwZXMuVXNlckxpbmtzUm93EiIKBWZhY3RzGAogAygLMhMudHlwZXMuVXNlckZhY3RzUm93Ei4KCmNyZWF0ZWRfYXQYCyABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEi4KCnVwZGF0ZWRfYXQYDCABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wItUBCghDYXRlZ29yeRIKCgJpZBgBIAEoCRIQCghwb3NpdGlvbhgCIAEoBRIRCglzZXJ2ZXJfaWQYAyABKAkSDAoEbmFtZRgEIAEoCRINCgV1c2VycxgFIAMoCRINCgVyb2xlcxgGIAMoCRIMCgRlMmVlGAcgASgIEi4KCmNyZWF0ZWRfYXQYCCABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEi4KCnVwZGF0ZWRfYXQYCSABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wIscBCgRSb2xlEgoKAmlkGAEgASgJEhEKCXNlcnZlcl9pZBgCIAEoCRIQCghwb3NpdGlvbhgDIAEoBRIMCgRuYW1lGAQgASgJEg0KBWNvbG9yGAUgASgJEhEKCWFiaWxpdGllcxgGIAMoCRIuCgpjcmVhdGVkX2F0GAcgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIuCgp1cGRhdGVkX2F0GAggASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcCKcAgoHQ2hhbm5lbBIKCgJpZBgBIAEoCRIRCglzZXJ2ZXJfaWQYAiABKAkSEwoLY2F0ZWdvcnlfaWQYAyABKAkSDAoEbmFtZRgEIAEoCRITCgtkZXNjcmlwdGlvbhgFIAEoCRIMCgR0eXBlGAYgASgJEgwKBGUyZWUYByABKAgSDQoFdXNlcnMYCCADKAkSDQoFcm9sZXMYCSADKAkSDgoGYWN0aXZlGAogASgIEhAKCHBvc2l0aW9uGAsgASgFEi4KCmNyZWF0ZWRfYXQYDCABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEi4KCnVwZGF0ZWRfYXQYDSABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wIjYKDFVzZXJMaW5rc1JvdxIKCgJpZBgBIAEoCRINCgVsYWJlbBgCIAEoCRILCgN1cmwYAyABKAkiOAoMVXNlckZhY3RzUm93EgoKAmlkGAEgASgJEg0KBWxhYmVsGAIgASgJEg0KBXZhbHVlGAMgASgJIiIKDkdldFNlcnZlclVzZXJzEhAKCHVzZXJfaWRzGAEgAygJQhxaGmdpdGh1Yi5jb20vb2t6bW8vbnlvL3Byb3RvYgZwcm90bzM", [file_google_protobuf_timestamp]);

/**
 * @generated from message types.WSMessage
 */
export type WSMessage = Message$1<"types.WSMessage"> & {
  /**
   * @generated from oneof types.WSMessage.content
   */
  content: {
    /**
     * @generated from field: types.ChangeStatus user_change_status = 1;
     */
    value: ChangeStatus;
    case: "userChangeStatus";
  } | {
    /**
     * @generated from field: types.NewChatMessage new_chat_message = 2;
     */
    value: NewChatMessage;
    case: "newChatMessage";
  } | {
    /**
     * @generated from field: types.EditChatMessage edit_chat_message = 3;
     */
    value: EditChatMessage;
    case: "editChatMessage";
  } | {
    /**
     * @generated from field: types.DeleteChatMessage delete_chat_message = 4;
     */
    value: DeleteChatMessage;
    case: "deleteChatMessage";
  } | {
    /**
     * @generated from field: types.StartChannel start_channel = 5;
     */
    value: StartChannel;
    case: "startChannel";
  } | {
    /**
     * @generated from field: types.StartCategory start_category = 6;
     */
    value: StartCategory;
    case: "startCategory";
  } | {
    /**
     * @generated from field: types.KillChannel kill_channel = 7;
     */
    value: KillChannel;
    case: "killChannel";
  } | {
    /**
     * @generated from field: types.KillCategory kill_category = 8;
     */
    value: KillCategory;
    case: "killCategory";
  } | {
    /**
     * @generated from field: types.CreateOrEditRole create_or_edit_role = 9;
     */
    value: CreateOrEditRole;
    case: "createOrEditRole";
  } | {
    /**
     * @generated from field: types.RemoveRole remove_role = 10;
     */
    value: RemoveRole;
    case: "removeRole";
  } | {
    /**
     * @generated from field: types.MoveRole move_role = 11;
     */
    value: MoveRole;
    case: "moveRole";
  } | {
    /**
     * @generated from field: types.AddRoleMember add_role_member = 12;
     */
    value: AddRoleMember;
    case: "addRoleMember";
  } | {
    /**
     * @generated from field: types.RemoveRoleMember remove_role_member = 13;
     */
    value: RemoveRoleMember;
    case: "removeRoleMember";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message types.WSMessage.
 * Use `create(WSMessageSchema)` to create a new message.
 */
export const WSMessageSchema: GenMessage<WSMessage> = /*@__PURE__*/
  messageDesc(file_types, 0);

/**
 * @generated from message types.ChangeStatus
 */
export type ChangeStatus = Message$1<"types.ChangeStatus"> & {
  /**
   * @generated from field: string type = 1;
   */
  type: string;

  /**
   * @generated from field: types.User user = 2;
   */
  user?: User;

  /**
   * @generated from field: string channel_id = 3;
   */
  channelId: string;

  /**
   * @generated from field: string server_id = 4;
   */
  serverId: string;

  /**
   * @generated from field: string status = 5;
   */
  status: string;

  /**
   * @generated from field: repeated string roles = 6;
   */
  roles: string[];
};

/**
 * Describes the message types.ChangeStatus.
 * Use `create(ChangeStatusSchema)` to create a new message.
 */
export const ChangeStatusSchema: GenMessage<ChangeStatus> = /*@__PURE__*/
  messageDesc(file_types, 1);

/**
 * @generated from message types.NewChatMessage
 */
export type NewChatMessage = Message$1<"types.NewChatMessage"> & {
  /**
   * @generated from field: types.Message message = 1;
   */
  message?: Message;
};

/**
 * Describes the message types.NewChatMessage.
 * Use `create(NewChatMessageSchema)` to create a new message.
 */
export const NewChatMessageSchema: GenMessage<NewChatMessage> = /*@__PURE__*/
  messageDesc(file_types, 2);

/**
 * @generated from message types.EditChatMessage
 */
export type EditChatMessage = Message$1<"types.EditChatMessage"> & {
  /**
   * @generated from field: types.Message message = 1;
   */
  message?: Message;
};

/**
 * Describes the message types.EditChatMessage.
 * Use `create(EditChatMessageSchema)` to create a new message.
 */
export const EditChatMessageSchema: GenMessage<EditChatMessage> = /*@__PURE__*/
  messageDesc(file_types, 3);

/**
 * @generated from message types.DeleteChatMessage
 */
export type DeleteChatMessage = Message$1<"types.DeleteChatMessage"> & {
  /**
   * @generated from field: types.Message message = 1;
   */
  message?: Message;
};

/**
 * Describes the message types.DeleteChatMessage.
 * Use `create(DeleteChatMessageSchema)` to create a new message.
 */
export const DeleteChatMessageSchema: GenMessage<DeleteChatMessage> = /*@__PURE__*/
  messageDesc(file_types, 4);

/**
 * @generated from message types.StartChannel
 */
export type StartChannel = Message$1<"types.StartChannel"> & {
  /**
   * @generated from field: types.Channel channel = 1;
   */
  channel?: Channel;
};

/**
 * Describes the message types.StartChannel.
 * Use `create(StartChannelSchema)` to create a new message.
 */
export const StartChannelSchema: GenMessage<StartChannel> = /*@__PURE__*/
  messageDesc(file_types, 5);

/**
 * @generated from message types.KillChannel
 */
export type KillChannel = Message$1<"types.KillChannel"> & {
  /**
   * @generated from field: types.Channel channel = 1;
   */
  channel?: Channel;
};

/**
 * Describes the message types.KillChannel.
 * Use `create(KillChannelSchema)` to create a new message.
 */
export const KillChannelSchema: GenMessage<KillChannel> = /*@__PURE__*/
  messageDesc(file_types, 6);

/**
 * @generated from message types.StartCategory
 */
export type StartCategory = Message$1<"types.StartCategory"> & {
  /**
   * @generated from field: types.Category category = 1;
   */
  category?: Category;
};

/**
 * Describes the message types.StartCategory.
 * Use `create(StartCategorySchema)` to create a new message.
 */
export const StartCategorySchema: GenMessage<StartCategory> = /*@__PURE__*/
  messageDesc(file_types, 7);

/**
 * @generated from message types.KillCategory
 */
export type KillCategory = Message$1<"types.KillCategory"> & {
  /**
   * @generated from field: string server_id = 1;
   */
  serverId: string;

  /**
   * @generated from field: string category_id = 2;
   */
  categoryId: string;

  /**
   * @generated from field: repeated string channels_ids = 3;
   */
  channelsIds: string[];
};

/**
 * Describes the message types.KillCategory.
 * Use `create(KillCategorySchema)` to create a new message.
 */
export const KillCategorySchema: GenMessage<KillCategory> = /*@__PURE__*/
  messageDesc(file_types, 8);

/**
 * @generated from message types.CreateOrEditRole
 */
export type CreateOrEditRole = Message$1<"types.CreateOrEditRole"> & {
  /**
   * @generated from field: types.Role role = 1;
   */
  role?: Role;
};

/**
 * Describes the message types.CreateOrEditRole.
 * Use `create(CreateOrEditRoleSchema)` to create a new message.
 */
export const CreateOrEditRoleSchema: GenMessage<CreateOrEditRole> = /*@__PURE__*/
  messageDesc(file_types, 9);

/**
 * @generated from message types.RemoveRole
 */
export type RemoveRole = Message$1<"types.RemoveRole"> & {
  /**
   * @generated from field: types.Role role = 1;
   */
  role?: Role;
};

/**
 * Describes the message types.RemoveRole.
 * Use `create(RemoveRoleSchema)` to create a new message.
 */
export const RemoveRoleSchema: GenMessage<RemoveRole> = /*@__PURE__*/
  messageDesc(file_types, 10);

/**
 * @generated from message types.MoveRole
 */
export type MoveRole = Message$1<"types.MoveRole"> & {
  /**
   * @generated from field: types.Role moved_role = 1;
   */
  movedRole?: Role;

  /**
   * @generated from field: types.Role target_role = 2;
   */
  targetRole?: Role;

  /**
   * @generated from field: int32 from = 3;
   */
  from: number;

  /**
   * @generated from field: int32 to = 4;
   */
  to: number;
};

/**
 * Describes the message types.MoveRole.
 * Use `create(MoveRoleSchema)` to create a new message.
 */
export const MoveRoleSchema: GenMessage<MoveRole> = /*@__PURE__*/
  messageDesc(file_types, 11);

/**
 * @generated from message types.AddRoleMember
 */
export type AddRoleMember = Message$1<"types.AddRoleMember"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: types.Role role = 2;
   */
  role?: Role;
};

/**
 * Describes the message types.AddRoleMember.
 * Use `create(AddRoleMemberSchema)` to create a new message.
 */
export const AddRoleMemberSchema: GenMessage<AddRoleMember> = /*@__PURE__*/
  messageDesc(file_types, 12);

/**
 * @generated from message types.RemoveRoleMember
 */
export type RemoveRoleMember = Message$1<"types.RemoveRoleMember"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: types.Role role = 2;
   */
  role?: Role;
};

/**
 * Describes the message types.RemoveRoleMember.
 * Use `create(RemoveRoleMemberSchema)` to create a new message.
 */
export const RemoveRoleMemberSchema: GenMessage<RemoveRoleMember> = /*@__PURE__*/
  messageDesc(file_types, 13);

/**
 * @generated from message types.Message
 */
export type Message = Message$1<"types.Message"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: types.User author = 2;
   */
  author?: User;

  /**
   * @generated from field: string server_id = 3;
   */
  serverId: string;

  /**
   * @generated from field: string channel_id = 4;
   */
  channelId: string;

  /**
   * @generated from field: bytes content = 5;
   */
  content: Uint8Array;

  /**
   * @generated from field: bool everyone = 6;
   */
  everyone: boolean;

  /**
   * @generated from field: repeated string mentions_users = 7;
   */
  mentionsUsers: string[];

  /**
   * @generated from field: repeated string mentions_channels = 8;
   */
  mentionsChannels: string[];

  /**
   * @generated from field: bytes attachments = 9;
   */
  attachments: Uint8Array;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 10;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 11;
   */
  updatedAt?: Timestamp;
};

/**
 * Describes the message types.Message.
 * Use `create(MessageSchema)` to create a new message.
 */
export const MessageSchema: GenMessage<Message> = /*@__PURE__*/
  messageDesc(file_types, 14);

/**
 * @generated from message types.User
 */
export type User = Message$1<"types.User"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string username = 2;
   */
  username: string;

  /**
   * @generated from field: string display_name = 3;
   */
  displayName: string;

  /**
   * @generated from field: string avatar = 4;
   */
  avatar: string;

  /**
   * @generated from field: string banner = 5;
   */
  banner: string;

  /**
   * @generated from field: bytes about_me = 6;
   */
  aboutMe: Uint8Array;

  /**
   * @generated from field: int32 experience = 7;
   */
  experience: number;

  /**
   * @generated from field: string main_color = 8;
   */
  mainColor: string;

  /**
   * @generated from field: repeated types.UserLinksRow links = 9;
   */
  links: UserLinksRow[];

  /**
   * @generated from field: repeated types.UserFactsRow facts = 10;
   */
  facts: UserFactsRow[];

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 11;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 12;
   */
  updatedAt?: Timestamp;
};

/**
 * Describes the message types.User.
 * Use `create(UserSchema)` to create a new message.
 */
export const UserSchema: GenMessage<User> = /*@__PURE__*/
  messageDesc(file_types, 15);

/**
 * @generated from message types.Category
 */
export type Category = Message$1<"types.Category"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: int32 position = 2;
   */
  position: number;

  /**
   * @generated from field: string server_id = 3;
   */
  serverId: string;

  /**
   * @generated from field: string name = 4;
   */
  name: string;

  /**
   * @generated from field: repeated string users = 5;
   */
  users: string[];

  /**
   * @generated from field: repeated string roles = 6;
   */
  roles: string[];

  /**
   * @generated from field: bool e2ee = 7;
   */
  e2ee: boolean;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 8;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 9;
   */
  updatedAt?: Timestamp;
};

/**
 * Describes the message types.Category.
 * Use `create(CategorySchema)` to create a new message.
 */
export const CategorySchema: GenMessage<Category> = /*@__PURE__*/
  messageDesc(file_types, 16);

/**
 * @generated from message types.Role
 */
export type Role = Message$1<"types.Role"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string server_id = 2;
   */
  serverId: string;

  /**
   * @generated from field: int32 position = 3;
   */
  position: number;

  /**
   * @generated from field: string name = 4;
   */
  name: string;

  /**
   * @generated from field: string color = 5;
   */
  color: string;

  /**
   * @generated from field: repeated string abilities = 6;
   */
  abilities: string[];

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 7;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 8;
   */
  updatedAt?: Timestamp;
};

/**
 * Describes the message types.Role.
 * Use `create(RoleSchema)` to create a new message.
 */
export const RoleSchema: GenMessage<Role> = /*@__PURE__*/
  messageDesc(file_types, 17);

/**
 * @generated from message types.Channel
 */
export type Channel = Message$1<"types.Channel"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string server_id = 2;
   */
  serverId: string;

  /**
   * @generated from field: string category_id = 3;
   */
  categoryId: string;

  /**
   * @generated from field: string name = 4;
   */
  name: string;

  /**
   * @generated from field: string description = 5;
   */
  description: string;

  /**
   * @generated from field: string type = 6;
   */
  type: string;

  /**
   * @generated from field: bool e2ee = 7;
   */
  e2ee: boolean;

  /**
   * @generated from field: repeated string users = 8;
   */
  users: string[];

  /**
   * @generated from field: repeated string roles = 9;
   */
  roles: string[];

  /**
   * @generated from field: bool active = 10;
   */
  active: boolean;

  /**
   * @generated from field: int32 position = 11;
   */
  position: number;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 12;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 13;
   */
  updatedAt?: Timestamp;
};

/**
 * Describes the message types.Channel.
 * Use `create(ChannelSchema)` to create a new message.
 */
export const ChannelSchema: GenMessage<Channel> = /*@__PURE__*/
  messageDesc(file_types, 18);

/**
 * @generated from message types.UserLinksRow
 */
export type UserLinksRow = Message$1<"types.UserLinksRow"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string label = 2;
   */
  label: string;

  /**
   * @generated from field: string url = 3;
   */
  url: string;
};

/**
 * Describes the message types.UserLinksRow.
 * Use `create(UserLinksRowSchema)` to create a new message.
 */
export const UserLinksRowSchema: GenMessage<UserLinksRow> = /*@__PURE__*/
  messageDesc(file_types, 19);

/**
 * @generated from message types.UserFactsRow
 */
export type UserFactsRow = Message$1<"types.UserFactsRow"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string label = 2;
   */
  label: string;

  /**
   * @generated from field: string value = 3;
   */
  value: string;
};

/**
 * Describes the message types.UserFactsRow.
 * Use `create(UserFactsRowSchema)` to create a new message.
 */
export const UserFactsRowSchema: GenMessage<UserFactsRow> = /*@__PURE__*/
  messageDesc(file_types, 20);

/**
 * @generated from message types.GetServerUsers
 */
export type GetServerUsers = Message$1<"types.GetServerUsers"> & {
  /**
   * @generated from field: repeated string user_ids = 1;
   */
  userIds: string[];
};

/**
 * Describes the message types.GetServerUsers.
 * Use `create(GetServerUsersSchema)` to create a new message.
 */
export const GetServerUsersSchema: GenMessage<GetServerUsers> = /*@__PURE__*/
  messageDesc(file_types, 21);

