// @generated by protoc-gen-es v2.3.0 with parameter "target=ts"
// @generated from file types.proto (package types, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message as Message$1 } from "@bufbuild/protobuf";

/**
 * Describes the file types.proto.
 */
export const file_types: GenFile = /*@__PURE__*/
  fileDesc("Cgt0eXBlcy5wcm90bxIFdHlwZXMiiQkKCVdTTWVzc2FnZRIxChJ1c2VyX2NoYW5nZV9zdGF0dXMYASABKAsyEy50eXBlcy5DaGFuZ2VTdGF0dXNIABIxChBuZXdfY2hhdF9tZXNzYWdlGAIgASgLMhUudHlwZXMuTmV3Q2hhdE1lc3NhZ2VIABIzChFlZGl0X2NoYXRfbWVzc2FnZRgDIAEoCzIWLnR5cGVzLkVkaXRDaGF0TWVzc2FnZUgAEjcKE2RlbGV0ZV9jaGF0X21lc3NhZ2UYBCABKAsyGC50eXBlcy5EZWxldGVDaGF0TWVzc2FnZUgAEiwKDXN0YXJ0X2NoYW5uZWwYBSABKAsyEy50eXBlcy5TdGFydENoYW5uZWxIABIuCg5zdGFydF9jYXRlZ29yeRgGIAEoCzIULnR5cGVzLlN0YXJ0Q2F0ZWdvcnlIABIoCgtraWxsX3NlcnZlchgHIAEoCzIRLnR5cGVzLktpbGxTZXJ2ZXJIABIqCgxraWxsX2NoYW5uZWwYCCABKAsyEi50eXBlcy5LaWxsQ2hhbm5lbEgAEiwKDWtpbGxfY2F0ZWdvcnkYCSABKAsyEy50eXBlcy5LaWxsQ2F0ZWdvcnlIABI2ChNjcmVhdGVfb3JfZWRpdF9yb2xlGAogASgLMhcudHlwZXMuQ3JlYXRlT3JFZGl0Um9sZUgAEigKC3JlbW92ZV9yb2xlGAsgASgLMhEudHlwZXMuUmVtb3ZlUm9sZUgAEiQKCW1vdmVfcm9sZRgMIAEoCzIPLnR5cGVzLk1vdmVSb2xlSAASLwoPYWRkX3JvbGVfbWVtYmVyGA0gASgLMhQudHlwZXMuQWRkUm9sZU1lbWJlckgAEjUKEnJlbW92ZV9yb2xlX21lbWJlchgOIAEoCzIXLnR5cGVzLlJlbW92ZVJvbGVNZW1iZXJIABIuCg5mcmllbmRfcmVxdWVzdBgPIAEoCzIULnR5cGVzLkZyaWVuZFJlcXVlc3RIABI7ChVhY2NlcHRfZnJpZW5kX3JlcXVlc3QYECABKAsyGi50eXBlcy5BY2NlcHRGcmllbmRSZXF1ZXN0SAASLAoNcmVtb3ZlX2ZyaWVuZBgRIAEoCzITLnR5cGVzLlJlbW92ZUZyaWVuZEgAEjIKEGFjY291bnRfZGVsZXRpb24YEiABKAsyFi50eXBlcy5BY2NvdW50RGVsZXRpb25IABI5ChRhdmF0YXJfc2VydmVyX2NoYW5nZRgTIAEoCzIZLnR5cGVzLkF2YXRhclNlcnZlckNoYW5nZUgAEjsKFXByb2ZpbGVfc2VydmVyX2NoYW5nZRgUIAEoCzIaLnR5cGVzLlByb2ZpbGVTZXJ2ZXJDaGFuZ2VIABIqCgxlZGl0X2NoYW5uZWwYFSABKAsyEi50eXBlcy5FZGl0Q2hhbm5lbEgAEiwKDWVkaXRfY2F0ZWdvcnkYFiABKAsyEy50eXBlcy5FZGl0Q2F0ZWdvcnlIABIqCgxsZWF2ZV9zZXJ2ZXIYFyABKAsyEi50eXBlcy5MZWF2ZVNlcnZlckgAQgkKB2NvbnRlbnQiLgoLRWRpdENoYW5uZWwSHwoHY2hhbm5lbBgBIAEoCzIOLnR5cGVzLkNoYW5uZWwiMQoMRWRpdENhdGVnb3J5EiEKCGNhdGVnb3J5GAEgASgLMg8udHlwZXMuQ2F0ZWdvcnkidwoSQXZhdGFyU2VydmVyQ2hhbmdlEhEKCXNlcnZlcl9pZBgBIAEoCRIXCgphdmF0YXJfdXJsGAIgASgJSACIAQESFwoKYmFubmVyX3VybBgDIAEoCUgBiAEBQg0KC19hdmF0YXJfdXJsQg0KC19iYW5uZXJfdXJsIlsKE1Byb2ZpbGVTZXJ2ZXJDaGFuZ2USEQoJc2VydmVyX2lkGAEgASgJEgwKBG5hbWUYAiABKAkSEwoLZGVzY3JpcHRpb24YAyABKAwSDgoGcHVibGljGAQgASgIIlUKDUZyaWVuZFJlcXVlc3QSFQoNZnJpZW5kc2hpcF9pZBgBIAEoCRIbCgZzZW5kZXIYAiABKAsyCy50eXBlcy5Vc2VyEhAKCGFjY2VwdGVkGAMgASgIIl0KE0FjY2VwdEZyaWVuZFJlcXVlc3QSFQoNZnJpZW5kc2hpcF9pZBgBIAEoCRIbCgZzZW5kZXIYAiABKAsyCy50eXBlcy5Vc2VyEhIKCmNoYW5uZWxfaWQYAyABKAkiYQoMUmVtb3ZlRnJpZW5kEhUKDWZyaWVuZHNoaXBfaWQYASABKAkSGwoGc2VuZGVyGAIgASgLMgsudHlwZXMuVXNlchIdCghyZWNlaXZlchgDIAEoCzILLnR5cGVzLlVzZXIifQoMQ2hhbmdlU3RhdHVzEgwKBHR5cGUYASABKAkSGQoEdXNlchgCIAEoCzILLnR5cGVzLlVzZXISEgoKY2hhbm5lbF9pZBgDIAEoCRIRCglzZXJ2ZXJfaWQYBCABKAkSDgoGc3RhdHVzGAUgASgJEg0KBXJvbGVzGAYgAygJIjEKDk5ld0NoYXRNZXNzYWdlEh8KB21lc3NhZ2UYASABKAsyDi50eXBlcy5NZXNzYWdlIjIKD0VkaXRDaGF0TWVzc2FnZRIfCgdtZXNzYWdlGAEgASgLMg4udHlwZXMuTWVzc2FnZSI0ChFEZWxldGVDaGF0TWVzc2FnZRIfCgdtZXNzYWdlGAEgASgLMg4udHlwZXMuTWVzc2FnZSIvCgxTdGFydENoYW5uZWwSHwoHY2hhbm5lbBgBIAEoCzIOLnR5cGVzLkNoYW5uZWwiHwoKS2lsbFNlcnZlchIRCglzZXJ2ZXJfaWQYASABKAkiLgoLS2lsbENoYW5uZWwSHwoHY2hhbm5lbBgBIAEoCzIOLnR5cGVzLkNoYW5uZWwiMgoNU3RhcnRDYXRlZ29yeRIhCghjYXRlZ29yeRgBIAEoCzIPLnR5cGVzLkNhdGVnb3J5IkwKDEtpbGxDYXRlZ29yeRIRCglzZXJ2ZXJfaWQYASABKAkSEwoLY2F0ZWdvcnlfaWQYAiABKAkSFAoMY2hhbm5lbHNfaWRzGAMgAygJIi0KEENyZWF0ZU9yRWRpdFJvbGUSGQoEcm9sZRgBIAEoCzILLnR5cGVzLlJvbGUiJwoKUmVtb3ZlUm9sZRIZCgRyb2xlGAEgASgLMgsudHlwZXMuUm9sZSJnCghNb3ZlUm9sZRIfCgptb3ZlZF9yb2xlGAEgASgLMgsudHlwZXMuUm9sZRIgCgt0YXJnZXRfcm9sZRgCIAEoCzILLnR5cGVzLlJvbGUSDAoEZnJvbRgDIAEoBRIKCgJ0bxgEIAEoBSI7Cg1BZGRSb2xlTWVtYmVyEg8KB3VzZXJfaWQYASABKAkSGQoEcm9sZRgCIAEoCzILLnR5cGVzLlJvbGUiPgoQUmVtb3ZlUm9sZU1lbWJlchIPCgd1c2VyX2lkGAEgASgJEhkKBHJvbGUYAiABKAsyCy50eXBlcy5Sb2xlIqQCCgdNZXNzYWdlEgoKAmlkGAEgASgJEhsKBmF1dGhvchgCIAEoCzILLnR5cGVzLlVzZXISEQoJc2VydmVyX2lkGAMgASgJEhIKCmNoYW5uZWxfaWQYBCABKAkSDwoHY29udGVudBgFIAEoDBIQCghldmVyeW9uZRgGIAEoCBIWCg5tZW50aW9uc191c2VycxgHIAMoCRIZChFtZW50aW9uc19jaGFubmVscxgIIAMoCRITCgthdHRhY2htZW50cxgJIAEoDBIuCgpjcmVhdGVkX2F0GAogASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIuCgp1cGRhdGVkX2F0GAsgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcCK8AgoEVXNlchIKCgJpZBgBIAEoCRIQCgh1c2VybmFtZRgCIAEoCRIUCgxkaXNwbGF5X25hbWUYAyABKAkSDgoGYXZhdGFyGAQgASgJEg4KBmJhbm5lchgFIAEoCRIQCghhYm91dF9tZRgGIAEoDBISCgpleHBlcmllbmNlGAcgASgFEhIKCm1haW5fY29sb3IYCCABKAkSIgoFbGlua3MYCSADKAsyEy50eXBlcy5Vc2VyTGlua3NSb3cSIgoFZmFjdHMYCiADKAsyEy50eXBlcy5Vc2VyRmFjdHNSb3cSLgoKY3JlYXRlZF9hdBgLIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASLgoKdXBkYXRlZF9hdBgMIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAi1QEKCENhdGVnb3J5EgoKAmlkGAEgASgJEhAKCHBvc2l0aW9uGAIgASgFEhEKCXNlcnZlcl9pZBgDIAEoCRIMCgRuYW1lGAQgASgJEg0KBXVzZXJzGAUgAygJEg0KBXJvbGVzGAYgAygJEgwKBGUyZWUYByABKAgSLgoKY3JlYXRlZF9hdBgIIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASLgoKdXBkYXRlZF9hdBgJIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAixwEKBFJvbGUSCgoCaWQYASABKAkSEQoJc2VydmVyX2lkGAIgASgJEhAKCHBvc2l0aW9uGAMgASgFEgwKBG5hbWUYBCABKAkSDQoFY29sb3IYBSABKAkSEQoJYWJpbGl0aWVzGAYgAygJEi4KCmNyZWF0ZWRfYXQYByABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEi4KCnVwZGF0ZWRfYXQYCCABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wIowCCgdDaGFubmVsEgoKAmlkGAEgASgJEhEKCXNlcnZlcl9pZBgCIAEoCRITCgtjYXRlZ29yeV9pZBgDIAEoCRIMCgRuYW1lGAQgASgJEhMKC2Rlc2NyaXB0aW9uGAUgASgJEgwKBHR5cGUYBiABKAkSDAoEZTJlZRgHIAEoCBINCgV1c2VycxgIIAMoCRINCgVyb2xlcxgJIAMoCRIQCghwb3NpdGlvbhgKIAEoBRIuCgpjcmVhdGVkX2F0GAsgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIuCgp1cGRhdGVkX2F0GAwgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcCI2CgxVc2VyTGlua3NSb3cSCgoCaWQYASABKAkSDQoFbGFiZWwYAiABKAkSCwoDdXJsGAMgASgJIjgKDFVzZXJGYWN0c1JvdxIKCgJpZBgBIAEoCRINCgVsYWJlbBgCIAEoCRINCgV2YWx1ZRgDIAEoCSIiCg5HZXRTZXJ2ZXJVc2VycxIQCgh1c2VyX2lkcxgBIAMoCSIgCgpHZXRGcmllbmRzEhIKCmZyaWVuZF9pZHMYASADKAkiNQoPQWNjb3VudERlbGV0aW9uEg8KB3VzZXJfaWQYASABKAkSEQoJc2VydmVyX2lkGAIgASgJIjEKC0xlYXZlU2VydmVyEhEKCXNlcnZlcl9pZBgBIAEoCRIPCgd1c2VyX2lkGAIgASgJQhxaGmdpdGh1Yi5jb20vb2t6bW8vbnlvL3Byb3RvYgZwcm90bzM", [file_google_protobuf_timestamp]);

/**
 * @generated from message types.WSMessage
 */
export type WSMessage = Message$1<"types.WSMessage"> & {
  /**
   * @generated from oneof types.WSMessage.content
   */
  content: {
    /**
     * @generated from field: types.ChangeStatus user_change_status = 1;
     */
    value: ChangeStatus;
    case: "userChangeStatus";
  } | {
    /**
     * @generated from field: types.NewChatMessage new_chat_message = 2;
     */
    value: NewChatMessage;
    case: "newChatMessage";
  } | {
    /**
     * @generated from field: types.EditChatMessage edit_chat_message = 3;
     */
    value: EditChatMessage;
    case: "editChatMessage";
  } | {
    /**
     * @generated from field: types.DeleteChatMessage delete_chat_message = 4;
     */
    value: DeleteChatMessage;
    case: "deleteChatMessage";
  } | {
    /**
     * @generated from field: types.StartChannel start_channel = 5;
     */
    value: StartChannel;
    case: "startChannel";
  } | {
    /**
     * @generated from field: types.StartCategory start_category = 6;
     */
    value: StartCategory;
    case: "startCategory";
  } | {
    /**
     * @generated from field: types.KillServer kill_server = 7;
     */
    value: KillServer;
    case: "killServer";
  } | {
    /**
     * @generated from field: types.KillChannel kill_channel = 8;
     */
    value: KillChannel;
    case: "killChannel";
  } | {
    /**
     * @generated from field: types.KillCategory kill_category = 9;
     */
    value: KillCategory;
    case: "killCategory";
  } | {
    /**
     * @generated from field: types.CreateOrEditRole create_or_edit_role = 10;
     */
    value: CreateOrEditRole;
    case: "createOrEditRole";
  } | {
    /**
     * @generated from field: types.RemoveRole remove_role = 11;
     */
    value: RemoveRole;
    case: "removeRole";
  } | {
    /**
     * @generated from field: types.MoveRole move_role = 12;
     */
    value: MoveRole;
    case: "moveRole";
  } | {
    /**
     * @generated from field: types.AddRoleMember add_role_member = 13;
     */
    value: AddRoleMember;
    case: "addRoleMember";
  } | {
    /**
     * @generated from field: types.RemoveRoleMember remove_role_member = 14;
     */
    value: RemoveRoleMember;
    case: "removeRoleMember";
  } | {
    /**
     * @generated from field: types.FriendRequest friend_request = 15;
     */
    value: FriendRequest;
    case: "friendRequest";
  } | {
    /**
     * @generated from field: types.AcceptFriendRequest accept_friend_request = 16;
     */
    value: AcceptFriendRequest;
    case: "acceptFriendRequest";
  } | {
    /**
     * @generated from field: types.RemoveFriend remove_friend = 17;
     */
    value: RemoveFriend;
    case: "removeFriend";
  } | {
    /**
     * @generated from field: types.AccountDeletion account_deletion = 18;
     */
    value: AccountDeletion;
    case: "accountDeletion";
  } | {
    /**
     * @generated from field: types.AvatarServerChange avatar_server_change = 19;
     */
    value: AvatarServerChange;
    case: "avatarServerChange";
  } | {
    /**
     * @generated from field: types.ProfileServerChange profile_server_change = 20;
     */
    value: ProfileServerChange;
    case: "profileServerChange";
  } | {
    /**
     * @generated from field: types.EditChannel edit_channel = 21;
     */
    value: EditChannel;
    case: "editChannel";
  } | {
    /**
     * @generated from field: types.EditCategory edit_category = 22;
     */
    value: EditCategory;
    case: "editCategory";
  } | {
    /**
     * @generated from field: types.LeaveServer leave_server = 23;
     */
    value: LeaveServer;
    case: "leaveServer";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message types.WSMessage.
 * Use `create(WSMessageSchema)` to create a new message.
 */
export const WSMessageSchema: GenMessage<WSMessage> = /*@__PURE__*/
  messageDesc(file_types, 0);

/**
 * @generated from message types.EditChannel
 */
export type EditChannel = Message$1<"types.EditChannel"> & {
  /**
   * @generated from field: types.Channel channel = 1;
   */
  channel?: Channel;
};

/**
 * Describes the message types.EditChannel.
 * Use `create(EditChannelSchema)` to create a new message.
 */
export const EditChannelSchema: GenMessage<EditChannel> = /*@__PURE__*/
  messageDesc(file_types, 1);

/**
 * @generated from message types.EditCategory
 */
export type EditCategory = Message$1<"types.EditCategory"> & {
  /**
   * @generated from field: types.Category category = 1;
   */
  category?: Category;
};

/**
 * Describes the message types.EditCategory.
 * Use `create(EditCategorySchema)` to create a new message.
 */
export const EditCategorySchema: GenMessage<EditCategory> = /*@__PURE__*/
  messageDesc(file_types, 2);

/**
 * @generated from message types.AvatarServerChange
 */
export type AvatarServerChange = Message$1<"types.AvatarServerChange"> & {
  /**
   * @generated from field: string server_id = 1;
   */
  serverId: string;

  /**
   * @generated from field: optional string avatar_url = 2;
   */
  avatarUrl?: string;

  /**
   * @generated from field: optional string banner_url = 3;
   */
  bannerUrl?: string;
};

/**
 * Describes the message types.AvatarServerChange.
 * Use `create(AvatarServerChangeSchema)` to create a new message.
 */
export const AvatarServerChangeSchema: GenMessage<AvatarServerChange> = /*@__PURE__*/
  messageDesc(file_types, 3);

/**
 * @generated from message types.ProfileServerChange
 */
export type ProfileServerChange = Message$1<"types.ProfileServerChange"> & {
  /**
   * @generated from field: string server_id = 1;
   */
  serverId: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: bytes description = 3;
   */
  description: Uint8Array;

  /**
   * @generated from field: bool public = 4;
   */
  public: boolean;
};

/**
 * Describes the message types.ProfileServerChange.
 * Use `create(ProfileServerChangeSchema)` to create a new message.
 */
export const ProfileServerChangeSchema: GenMessage<ProfileServerChange> = /*@__PURE__*/
  messageDesc(file_types, 4);

/**
 * @generated from message types.FriendRequest
 */
export type FriendRequest = Message$1<"types.FriendRequest"> & {
  /**
   * @generated from field: string friendship_id = 1;
   */
  friendshipId: string;

  /**
   * @generated from field: types.User sender = 2;
   */
  sender?: User;

  /**
   * @generated from field: bool accepted = 3;
   */
  accepted: boolean;
};

/**
 * Describes the message types.FriendRequest.
 * Use `create(FriendRequestSchema)` to create a new message.
 */
export const FriendRequestSchema: GenMessage<FriendRequest> = /*@__PURE__*/
  messageDesc(file_types, 5);

/**
 * @generated from message types.AcceptFriendRequest
 */
export type AcceptFriendRequest = Message$1<"types.AcceptFriendRequest"> & {
  /**
   * @generated from field: string friendship_id = 1;
   */
  friendshipId: string;

  /**
   * @generated from field: types.User sender = 2;
   */
  sender?: User;

  /**
   * @generated from field: string channel_id = 3;
   */
  channelId: string;
};

/**
 * Describes the message types.AcceptFriendRequest.
 * Use `create(AcceptFriendRequestSchema)` to create a new message.
 */
export const AcceptFriendRequestSchema: GenMessage<AcceptFriendRequest> = /*@__PURE__*/
  messageDesc(file_types, 6);

/**
 * @generated from message types.RemoveFriend
 */
export type RemoveFriend = Message$1<"types.RemoveFriend"> & {
  /**
   * @generated from field: string friendship_id = 1;
   */
  friendshipId: string;

  /**
   * @generated from field: types.User sender = 2;
   */
  sender?: User;

  /**
   * @generated from field: types.User receiver = 3;
   */
  receiver?: User;
};

/**
 * Describes the message types.RemoveFriend.
 * Use `create(RemoveFriendSchema)` to create a new message.
 */
export const RemoveFriendSchema: GenMessage<RemoveFriend> = /*@__PURE__*/
  messageDesc(file_types, 7);

/**
 * @generated from message types.ChangeStatus
 */
export type ChangeStatus = Message$1<"types.ChangeStatus"> & {
  /**
   * @generated from field: string type = 1;
   */
  type: string;

  /**
   * @generated from field: types.User user = 2;
   */
  user?: User;

  /**
   * @generated from field: string channel_id = 3;
   */
  channelId: string;

  /**
   * @generated from field: string server_id = 4;
   */
  serverId: string;

  /**
   * @generated from field: string status = 5;
   */
  status: string;

  /**
   * @generated from field: repeated string roles = 6;
   */
  roles: string[];
};

/**
 * Describes the message types.ChangeStatus.
 * Use `create(ChangeStatusSchema)` to create a new message.
 */
export const ChangeStatusSchema: GenMessage<ChangeStatus> = /*@__PURE__*/
  messageDesc(file_types, 8);

/**
 * @generated from message types.NewChatMessage
 */
export type NewChatMessage = Message$1<"types.NewChatMessage"> & {
  /**
   * @generated from field: types.Message message = 1;
   */
  message?: Message;
};

/**
 * Describes the message types.NewChatMessage.
 * Use `create(NewChatMessageSchema)` to create a new message.
 */
export const NewChatMessageSchema: GenMessage<NewChatMessage> = /*@__PURE__*/
  messageDesc(file_types, 9);

/**
 * @generated from message types.EditChatMessage
 */
export type EditChatMessage = Message$1<"types.EditChatMessage"> & {
  /**
   * @generated from field: types.Message message = 1;
   */
  message?: Message;
};

/**
 * Describes the message types.EditChatMessage.
 * Use `create(EditChatMessageSchema)` to create a new message.
 */
export const EditChatMessageSchema: GenMessage<EditChatMessage> = /*@__PURE__*/
  messageDesc(file_types, 10);

/**
 * @generated from message types.DeleteChatMessage
 */
export type DeleteChatMessage = Message$1<"types.DeleteChatMessage"> & {
  /**
   * @generated from field: types.Message message = 1;
   */
  message?: Message;
};

/**
 * Describes the message types.DeleteChatMessage.
 * Use `create(DeleteChatMessageSchema)` to create a new message.
 */
export const DeleteChatMessageSchema: GenMessage<DeleteChatMessage> = /*@__PURE__*/
  messageDesc(file_types, 11);

/**
 * @generated from message types.StartChannel
 */
export type StartChannel = Message$1<"types.StartChannel"> & {
  /**
   * @generated from field: types.Channel channel = 1;
   */
  channel?: Channel;
};

/**
 * Describes the message types.StartChannel.
 * Use `create(StartChannelSchema)` to create a new message.
 */
export const StartChannelSchema: GenMessage<StartChannel> = /*@__PURE__*/
  messageDesc(file_types, 12);

/**
 * @generated from message types.KillServer
 */
export type KillServer = Message$1<"types.KillServer"> & {
  /**
   * @generated from field: string server_id = 1;
   */
  serverId: string;
};

/**
 * Describes the message types.KillServer.
 * Use `create(KillServerSchema)` to create a new message.
 */
export const KillServerSchema: GenMessage<KillServer> = /*@__PURE__*/
  messageDesc(file_types, 13);

/**
 * @generated from message types.KillChannel
 */
export type KillChannel = Message$1<"types.KillChannel"> & {
  /**
   * @generated from field: types.Channel channel = 1;
   */
  channel?: Channel;
};

/**
 * Describes the message types.KillChannel.
 * Use `create(KillChannelSchema)` to create a new message.
 */
export const KillChannelSchema: GenMessage<KillChannel> = /*@__PURE__*/
  messageDesc(file_types, 14);

/**
 * @generated from message types.StartCategory
 */
export type StartCategory = Message$1<"types.StartCategory"> & {
  /**
   * @generated from field: types.Category category = 1;
   */
  category?: Category;
};

/**
 * Describes the message types.StartCategory.
 * Use `create(StartCategorySchema)` to create a new message.
 */
export const StartCategorySchema: GenMessage<StartCategory> = /*@__PURE__*/
  messageDesc(file_types, 15);

/**
 * @generated from message types.KillCategory
 */
export type KillCategory = Message$1<"types.KillCategory"> & {
  /**
   * @generated from field: string server_id = 1;
   */
  serverId: string;

  /**
   * @generated from field: string category_id = 2;
   */
  categoryId: string;

  /**
   * @generated from field: repeated string channels_ids = 3;
   */
  channelsIds: string[];
};

/**
 * Describes the message types.KillCategory.
 * Use `create(KillCategorySchema)` to create a new message.
 */
export const KillCategorySchema: GenMessage<KillCategory> = /*@__PURE__*/
  messageDesc(file_types, 16);

/**
 * @generated from message types.CreateOrEditRole
 */
export type CreateOrEditRole = Message$1<"types.CreateOrEditRole"> & {
  /**
   * @generated from field: types.Role role = 1;
   */
  role?: Role;
};

/**
 * Describes the message types.CreateOrEditRole.
 * Use `create(CreateOrEditRoleSchema)` to create a new message.
 */
export const CreateOrEditRoleSchema: GenMessage<CreateOrEditRole> = /*@__PURE__*/
  messageDesc(file_types, 17);

/**
 * @generated from message types.RemoveRole
 */
export type RemoveRole = Message$1<"types.RemoveRole"> & {
  /**
   * @generated from field: types.Role role = 1;
   */
  role?: Role;
};

/**
 * Describes the message types.RemoveRole.
 * Use `create(RemoveRoleSchema)` to create a new message.
 */
export const RemoveRoleSchema: GenMessage<RemoveRole> = /*@__PURE__*/
  messageDesc(file_types, 18);

/**
 * @generated from message types.MoveRole
 */
export type MoveRole = Message$1<"types.MoveRole"> & {
  /**
   * @generated from field: types.Role moved_role = 1;
   */
  movedRole?: Role;

  /**
   * @generated from field: types.Role target_role = 2;
   */
  targetRole?: Role;

  /**
   * @generated from field: int32 from = 3;
   */
  from: number;

  /**
   * @generated from field: int32 to = 4;
   */
  to: number;
};

/**
 * Describes the message types.MoveRole.
 * Use `create(MoveRoleSchema)` to create a new message.
 */
export const MoveRoleSchema: GenMessage<MoveRole> = /*@__PURE__*/
  messageDesc(file_types, 19);

/**
 * @generated from message types.AddRoleMember
 */
export type AddRoleMember = Message$1<"types.AddRoleMember"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: types.Role role = 2;
   */
  role?: Role;
};

/**
 * Describes the message types.AddRoleMember.
 * Use `create(AddRoleMemberSchema)` to create a new message.
 */
export const AddRoleMemberSchema: GenMessage<AddRoleMember> = /*@__PURE__*/
  messageDesc(file_types, 20);

/**
 * @generated from message types.RemoveRoleMember
 */
export type RemoveRoleMember = Message$1<"types.RemoveRoleMember"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: types.Role role = 2;
   */
  role?: Role;
};

/**
 * Describes the message types.RemoveRoleMember.
 * Use `create(RemoveRoleMemberSchema)` to create a new message.
 */
export const RemoveRoleMemberSchema: GenMessage<RemoveRoleMember> = /*@__PURE__*/
  messageDesc(file_types, 21);

/**
 * @generated from message types.Message
 */
export type Message = Message$1<"types.Message"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: types.User author = 2;
   */
  author?: User;

  /**
   * @generated from field: string server_id = 3;
   */
  serverId: string;

  /**
   * @generated from field: string channel_id = 4;
   */
  channelId: string;

  /**
   * @generated from field: bytes content = 5;
   */
  content: Uint8Array;

  /**
   * @generated from field: bool everyone = 6;
   */
  everyone: boolean;

  /**
   * @generated from field: repeated string mentions_users = 7;
   */
  mentionsUsers: string[];

  /**
   * @generated from field: repeated string mentions_channels = 8;
   */
  mentionsChannels: string[];

  /**
   * @generated from field: bytes attachments = 9;
   */
  attachments: Uint8Array;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 10;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 11;
   */
  updatedAt?: Timestamp;
};

/**
 * Describes the message types.Message.
 * Use `create(MessageSchema)` to create a new message.
 */
export const MessageSchema: GenMessage<Message> = /*@__PURE__*/
  messageDesc(file_types, 22);

/**
 * @generated from message types.User
 */
export type User = Message$1<"types.User"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string username = 2;
   */
  username: string;

  /**
   * @generated from field: string display_name = 3;
   */
  displayName: string;

  /**
   * @generated from field: string avatar = 4;
   */
  avatar: string;

  /**
   * @generated from field: string banner = 5;
   */
  banner: string;

  /**
   * @generated from field: bytes about_me = 6;
   */
  aboutMe: Uint8Array;

  /**
   * @generated from field: int32 experience = 7;
   */
  experience: number;

  /**
   * @generated from field: string main_color = 8;
   */
  mainColor: string;

  /**
   * @generated from field: repeated types.UserLinksRow links = 9;
   */
  links: UserLinksRow[];

  /**
   * @generated from field: repeated types.UserFactsRow facts = 10;
   */
  facts: UserFactsRow[];

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 11;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 12;
   */
  updatedAt?: Timestamp;
};

/**
 * Describes the message types.User.
 * Use `create(UserSchema)` to create a new message.
 */
export const UserSchema: GenMessage<User> = /*@__PURE__*/
  messageDesc(file_types, 23);

/**
 * @generated from message types.Category
 */
export type Category = Message$1<"types.Category"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: int32 position = 2;
   */
  position: number;

  /**
   * @generated from field: string server_id = 3;
   */
  serverId: string;

  /**
   * @generated from field: string name = 4;
   */
  name: string;

  /**
   * @generated from field: repeated string users = 5;
   */
  users: string[];

  /**
   * @generated from field: repeated string roles = 6;
   */
  roles: string[];

  /**
   * @generated from field: bool e2ee = 7;
   */
  e2ee: boolean;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 8;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 9;
   */
  updatedAt?: Timestamp;
};

/**
 * Describes the message types.Category.
 * Use `create(CategorySchema)` to create a new message.
 */
export const CategorySchema: GenMessage<Category> = /*@__PURE__*/
  messageDesc(file_types, 24);

/**
 * @generated from message types.Role
 */
export type Role = Message$1<"types.Role"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string server_id = 2;
   */
  serverId: string;

  /**
   * @generated from field: int32 position = 3;
   */
  position: number;

  /**
   * @generated from field: string name = 4;
   */
  name: string;

  /**
   * @generated from field: string color = 5;
   */
  color: string;

  /**
   * @generated from field: repeated string abilities = 6;
   */
  abilities: string[];

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 7;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 8;
   */
  updatedAt?: Timestamp;
};

/**
 * Describes the message types.Role.
 * Use `create(RoleSchema)` to create a new message.
 */
export const RoleSchema: GenMessage<Role> = /*@__PURE__*/
  messageDesc(file_types, 25);

/**
 * @generated from message types.Channel
 */
export type Channel = Message$1<"types.Channel"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string server_id = 2;
   */
  serverId: string;

  /**
   * @generated from field: string category_id = 3;
   */
  categoryId: string;

  /**
   * @generated from field: string name = 4;
   */
  name: string;

  /**
   * @generated from field: string description = 5;
   */
  description: string;

  /**
   * @generated from field: string type = 6;
   */
  type: string;

  /**
   * @generated from field: bool e2ee = 7;
   */
  e2ee: boolean;

  /**
   * @generated from field: repeated string users = 8;
   */
  users: string[];

  /**
   * @generated from field: repeated string roles = 9;
   */
  roles: string[];

  /**
   * @generated from field: int32 position = 10;
   */
  position: number;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 11;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 12;
   */
  updatedAt?: Timestamp;
};

/**
 * Describes the message types.Channel.
 * Use `create(ChannelSchema)` to create a new message.
 */
export const ChannelSchema: GenMessage<Channel> = /*@__PURE__*/
  messageDesc(file_types, 26);

/**
 * @generated from message types.UserLinksRow
 */
export type UserLinksRow = Message$1<"types.UserLinksRow"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string label = 2;
   */
  label: string;

  /**
   * @generated from field: string url = 3;
   */
  url: string;
};

/**
 * Describes the message types.UserLinksRow.
 * Use `create(UserLinksRowSchema)` to create a new message.
 */
export const UserLinksRowSchema: GenMessage<UserLinksRow> = /*@__PURE__*/
  messageDesc(file_types, 27);

/**
 * @generated from message types.UserFactsRow
 */
export type UserFactsRow = Message$1<"types.UserFactsRow"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string label = 2;
   */
  label: string;

  /**
   * @generated from field: string value = 3;
   */
  value: string;
};

/**
 * Describes the message types.UserFactsRow.
 * Use `create(UserFactsRowSchema)` to create a new message.
 */
export const UserFactsRowSchema: GenMessage<UserFactsRow> = /*@__PURE__*/
  messageDesc(file_types, 28);

/**
 * @generated from message types.GetServerUsers
 */
export type GetServerUsers = Message$1<"types.GetServerUsers"> & {
  /**
   * @generated from field: repeated string user_ids = 1;
   */
  userIds: string[];
};

/**
 * Describes the message types.GetServerUsers.
 * Use `create(GetServerUsersSchema)` to create a new message.
 */
export const GetServerUsersSchema: GenMessage<GetServerUsers> = /*@__PURE__*/
  messageDesc(file_types, 29);

/**
 * @generated from message types.GetFriends
 */
export type GetFriends = Message$1<"types.GetFriends"> & {
  /**
   * @generated from field: repeated string friend_ids = 1;
   */
  friendIds: string[];
};

/**
 * Describes the message types.GetFriends.
 * Use `create(GetFriendsSchema)` to create a new message.
 */
export const GetFriendsSchema: GenMessage<GetFriends> = /*@__PURE__*/
  messageDesc(file_types, 30);

/**
 * @generated from message types.AccountDeletion
 */
export type AccountDeletion = Message$1<"types.AccountDeletion"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: string server_id = 2;
   */
  serverId: string;
};

/**
 * Describes the message types.AccountDeletion.
 * Use `create(AccountDeletionSchema)` to create a new message.
 */
export const AccountDeletionSchema: GenMessage<AccountDeletion> = /*@__PURE__*/
  messageDesc(file_types, 31);

/**
 * @generated from message types.LeaveServer
 */
export type LeaveServer = Message$1<"types.LeaveServer"> & {
  /**
   * @generated from field: string server_id = 1;
   */
  serverId: string;

  /**
   * @generated from field: string user_id = 2;
   */
  userId: string;
};

/**
 * Describes the message types.LeaveServer.
 * Use `create(LeaveServerSchema)` to create a new message.
 */
export const LeaveServerSchema: GenMessage<LeaveServer> = /*@__PURE__*/
  messageDesc(file_types, 32);

